# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 13 is conviniet
# when copying and pasting from another recipe, but not really needed.
{% set name = "pycsm" %}
{% set version = "1.0.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/USGS-Astrogeology/{{name}}/archive/{{version}}.tar.gz
  sha256: 6244ed948800683dff6a6d51b6e164f0b11a5f844bb2c18506371a6d50b58c62

build:
  number: 0

requirements:
  build:
    # if your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('cxx') }}  # [linux]
    - cmake >=3.10
    - python >=3.5
  host:
    - pip
    - python >=3.5
    - csm
    - swig
  run:
    - python >=3.5
    - csm
    - numpy

test:
  imports:
    - csmapi

about:
  home: http://github.com/USGS-Astrogeology/swigcsm
  license: Unlicense
  license_file: LICENSE.txt
  summary: 'Python Wrapper to the Community Sensor Model (CSM) library.'

  # The remaining entries in this section are optional, but recommended
  description: |
    pycsm is a swig generated wrapper to the C++ Community Sensor Model API. 
    The pycsm library does not provide any sensor model implementations, instead
    pycsm exposes the plugin architecture defined by the CSM and supports
    dynamic loading of shared CSM implementations. See the docs for how to load
    a sensor model implementation.
  doc_url: http://github.com/USGS-Astrogeology/swigcsm
  dev_url: http://github.com/USGS-Astrogeology/swigcsm

extra:
  recipe-maintainers:
    - jlaura
